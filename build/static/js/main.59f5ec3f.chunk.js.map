{"version":3,"sources":["gql/query.js","shared/user.state.js","hooks/auth.js","assets/logo/logo.svg","components/Header.js","components/Feeds.js","gql/mutation.js","components/Editor.js","components/Login.js","components/StoryView.js","components/Register.js","components/Follow.js","hooks/follow.js","components/Logout.js","components/Profile.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["GET_STORY","gql","GET_STORY_BY_ID","GET_ME","GET_USER_BY_ID","isLogin","atom","key","default","isFollow","useAuth","login","useRecoilValue","useQuery","data","refetch","useEffect","me","user","Header","className","src","logo","alt","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Feeds","getAllStory","map","id","title","Date","Number","createdAt","toDateString","authorID","author","username","LOGIN_USER","REGISTER_USER","CREATE_STORY","LOGOUT","FOLLOW_USER","Editor","useMutation","createStory","history","useHistory","useState","value","setValue","setTitle","onSave","a","variables","content","push","placeholder","onChange","e","target","onClick","disabled","height","Login","email","setEmail","password","setPassword","loginUser","useRecoilState","setLogin","onSubmit","preventDefault","type","required","error","StoryView","useParams","getStoryById","Markdown","source","Register","setUsername","registerUser","createUser","Follow","followUser","follow","setFollow","getUserById","useFollow","onFollow","followers","indexOf","Logout","logout","onLogout","Profile","length","followings","stories","s","App","client","ApolloClient","uri","cache","InMemoryCache","ApolloProvider","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.59f5ec3f.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\nexport const GET_STORY = gql`\r\n  query {\r\n    getAllStory {\r\n      id\r\n      content\r\n      title\r\n      authorID\r\n      createdAt\r\n      author {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_STORY_BY_ID = gql`\r\n  query getStoryById($id: ID!) {\r\n    getStoryById(id: $id) {\r\n      title\r\n      content\r\n      authorID\r\n      createdAt\r\n      author {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const GET_ME = gql`\r\n  query {\r\n    me {\r\n      user\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query getUserById($id: ID!) {\r\n    getUserById(id: $id) {\r\n      username\r\n      email\r\n      followers\r\n      followings\r\n      stories {\r\n        id\r\n        title\r\n        content\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isLogin = atom({\r\n  key: \"isLogin\",\r\n  default: false,\r\n});\r\nexport const isFollow = atom({\r\n  key: \"isFollow\",\r\n  default: false,\r\n});\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { GET_ME } from \"../gql/query\";\r\nimport { isLogin } from \"../shared/user.state\";\r\n\r\nexport const useAuth = () => {\r\n  const login = useRecoilValue(isLogin);\r\n  const { data, refetch } = useQuery(GET_ME);\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [login]);\r\n  return data?.me?.user;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.b74770b2.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../hooks/auth\";\r\nimport logo from \"../assets/logo/logo.svg\";\r\n\r\nconst Header = () => {\r\n  const user = useAuth();\r\n\r\n  return (\r\n    <nav\r\n      className={`sticky top-0 w-full h-16 bg-white flex justify-around items-center   px-4 z-10`}\r\n    >\r\n      <img className=\"w-20 \" src={logo} alt=\"Storium\" />\r\n      {user ? (\r\n        <Link\r\n          to={`/profile/${user}`}\r\n          className=\"hidden md:flex items-center justify-center cursor-pointer outline-none sticky right-0 top-2 w-8 h-8 rounded-full border-2 border-blue-500\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n            />\r\n          </svg>\r\n        </Link>\r\n      ) : (\r\n        <Link to=\"/login\" className=\"hidden md:block\">\r\n          <button className=\" flex items-center justify-center w-28 h-9 bg-blue-500 font-medium text-white rounded-md hover:bg-blue-700 cursor-pointer outline-none shadow-md \">\r\n            login\r\n          </button>\r\n        </Link>\r\n      )}\r\n\r\n      <ul\r\n        className={`flex justify-between items-center w-1/2 md:-translate-x-full md:hidden `}\r\n      >\r\n        <li>\r\n          <Link\r\n            to=\"/\"\r\n            className=\"font-medium w-20 flex items-center justify-center text-gray-800 cursor-pointer hover:text-blue-500\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\r\n              />\r\n            </svg>{\" \"}\r\n            Stories\r\n          </Link>\r\n        </li>\r\n        {user && (\r\n          <li>\r\n            <Link\r\n              to=\"/editor\"\r\n              className=\"font-medium flex w-32 justify-center items-center text-gray-800 cursor-pointer hover:text-blue-500\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                />\r\n              </svg>{\" \"}\r\n              Create Story\r\n            </Link>\r\n          </li>\r\n        )}\r\n        {user ? (\r\n          <li>\r\n            <Link to={`/profile/${user}`}>\r\n              <button className=\" w-32 h-9 flex items-center justify-center bg-blue-500 font-medium text-white rounded-md hover:bg-blue-700 cursor-pointer outline-none shadow-md\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                  />\r\n                </svg>\r\n                Profile\r\n              </button>\r\n            </Link>\r\n          </li>\r\n        ) : (\r\n          <li>\r\n            <Link to=\"/login\">\r\n              <button className=\" flex items-center justify-center w-32 h-9 bg-blue-500 font-medium text-white rounded-md hover:bg-blue-700 cursor-pointer outline-none shadow-md \">\r\n                Get Started\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M13 7l5 5m0 0l-5 5m5-5H6\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Header;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GET_STORY } from \"../gql/query\";\r\n\r\nconst Feeds = () => {\r\n  const { data, refetch } = useQuery(GET_STORY);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-1/2 m-auto  px-8 py-4 md:w-full md:px-4 \">\r\n      {data ? (\r\n        data.getAllStory.map((d) => (\r\n          <Link key={d.id} to={`/story/${d.id}`}>\r\n            <div className=\"w-full bg-blue-100  mr-auto ml-auto mb-4 px-4 py-2 flex justify-between flex-col border-2 rounded-md\">\r\n              <p className=\"text-3xl font-extrabold font-sans mb-8 text-gray-800 cursor-pointer capitalize hover:text-blue-500 md:text-2xl\">\r\n                {d.title}\r\n              </p>\r\n              <div>\r\n                <p className=\"text-gray-600 text-sm font-semibold\">\r\n                  Published on : {new Date(Number(d.createdAt)).toDateString()}\r\n                </p>\r\n                <Link to={`/profile/${d.authorID}`}>\r\n                  <p className=\"font-semibold capitalize text-md text-gray-800 hover:text-blue-500\">\r\n                    {d.author.username}\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))\r\n      ) : (\r\n        <>\r\n          {[0, 0, 0, 0].map((d) => (\r\n            <div className=\"w-full bg-blue-100  mr-auto ml-auto mb-4 animate-pulse px-4 py-2 flex justify-between flex-col border-2 rounded-md\">\r\n              <div className=\"container h-8 bg-blue-200 rounded-lg  mb-8\"></div>\r\n              <div>\r\n                <div className=\"w-40 h-4 bg-blue-200 mb-2 rounded-sm\"></div>\r\n                <div className=\"w-36 h-6 bg-blue-200 rounded\"></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import { gql } from \"@apollo/client\";\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String!) {\r\n    loginUser(email: $email, password: $password) {\r\n      user\r\n      error\r\n    }\r\n  }\r\n`;\r\nexport const REGISTER_USER = gql`\r\n  mutation registerUser(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      user\r\n      error\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_STORY = gql`\r\n  mutation CreateStory($title: String!, $content: String!) {\r\n    createStory(title: $title, content: $content) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const LOGOUT = gql`\r\n  mutation {\r\n    logout {\r\n      user\r\n    }\r\n  }\r\n`;\r\nexport const CLAP = gql`\r\n  mutation clap($id: ID!) {\r\n    clap(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const FOLLOW_USER = gql`\r\n  mutation followUser($id: ID!) {\r\n    followUser(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATE_STORY } from \"../gql/mutation\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Editor = () => {\r\n  const [createStory] = useMutation(CREATE_STORY);\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const onSave = async () => {\r\n    await createStory({\r\n      variables: { title: title, content: value },\r\n    });\r\n    try {\r\n      history.push(\"/\");\r\n    } catch {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full  px-40\">\r\n      <div className=\"w-full ml-auto sticky top-14 h-14 flex items-center justify-between\">\r\n        <input\r\n          className=\"w-4/6 h-12 border-2 px-4 text-xl font-bold outline-none  rounded-md\"\r\n          placeholder=\"Title of the story\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <button\r\n          onClick={() => history.push(\"/\")}\r\n          className=\"w-28 h-8 bg-yellow-100 rounded-md hover:bg-yellow-300 text-yellow-800 text-md font-medium shadow-sm\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          disabled={!title && !value}\r\n          onClick={onSave}\r\n          className=\"w-28 h-8 bg-blue-200 rounded-md hover:bg-blue-300  text-blue-800 text-md capitalize font-medium shadow-sm\"\r\n        >\r\n          publish\r\n        </button>\r\n      </div>\r\n      <MDEditor height={500} value={value} onChange={setValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { LOGIN_USER } from \"../gql/mutation\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { isLogin } from \"../shared/user.state\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginUser, { data }] = useMutation(LOGIN_USER);\r\n  const [login, setLogin] = useRecoilState(isLogin);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await loginUser({\r\n      variables: { email: email, password: password },\r\n    });\r\n  };\r\n\r\n  if (data?.loginUser?.user) {\r\n    setLogin(!login);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"md:w-full p-8 w-4/12 shadow-lg rounded-lg h-96 ml-auto mr-auto mt-32 flex flex-col justify-center items-center bg-gray-100\">\r\n      <p className=\"text-blue-500 font-bold text-3xl mb-4\">Login</p>\r\n      <form\r\n        className=\"container h-60 flex justify-around items-center flex-col relative\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <input\r\n          className=\"w-80 h-11 outline-none border-2 rounded-lg border-blue-400 p-4\"\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          className=\"w-80 h-11 outline-none border-2 rounded-lg border-blue-400 p-4\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {data?.loginUser?.error && (\r\n          <p className=\"text-red-500 font-medium \">{data.loginUser.error}</p>\r\n        )}\r\n        <button\r\n          disabled={!email && !password}\r\n          type=\"submit\"\r\n          className=\"w-40 h-9 bg-blue-500 rounded-lg text-white font-semibold uppercase hover:bg-blue-600 \"\r\n        >\r\n          submit\r\n        </button>\r\n        <Link to=\"/register\">\r\n          <p className=\"font-medium text-base hover:text-blue-400 cursor-pointer \">\r\n            new user\r\n          </p>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_STORY_BY_ID } from \"../gql/query\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StoryView = () => {\r\n  const { id } = useParams();\r\n  const { data } = useQuery(GET_STORY_BY_ID, {\r\n    variables: { id: id },\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-1/2 ml-auto mr-auto p-8 bg-white md:w-full md:p-4\">\r\n      {data ? (\r\n        <>\r\n          <div className=\"mb-8\">\r\n            <p className=\"text-4xl font-extrabold mb-8 capitalize md:text-3xl\">\r\n              {data.getStoryById.title}\r\n            </p>\r\n            <div className=\"flex items-center justify-between md:flex-col md:items-start\">\r\n              <p className=\" font-bold text-base text-gray-600\">\r\n                Author :{\" \"}\r\n                <Link to={`/profile/${data.getStoryById.authorID}`}>\r\n                  <span className=\"hover:text-blue-500 capitalize\">\r\n                    {data.getStoryById.author.username}\r\n                  </span>\r\n                </Link>\r\n              </p>\r\n\r\n              <p className=\"text-gray-600 text-sm font-semibold\">\r\n                Published on :{\" \"}\r\n                <span className=\"text-blue-500\">\r\n                  {new Date(Number(data.getStoryById.createdAt)).toDateString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <MDEditor.Markdown\r\n            className=\"font-normal text-md text-gray-800\"\r\n            source={data.getStoryById.content}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"mb-8 animate-pulse\">\r\n            <div className=\"container h-12 rounded-lg bg-gray-200 mb-8\"></div>\r\n            <div className=\"flex items-center justify-between md:flex-col md:items-start\">\r\n              <div className=\"bg-gray-200 w-32 h-4 rounded mb-2\"></div>\r\n              <div className=\"bg-gray-200 w-36 h-4 rounded\"></div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"container animate-pulse \">\r\n            <div className=\"container h-4 mb-2 bg-gray-200\"></div>\r\n            <div className=\"container h-4  mb-2 bg-gray-200\"></div>\r\n            <div className=\"container h-4  mb-2 bg-gray-200\"></div>\r\n            <div className=\"container h-4  mb-2 bg-gray-200\"></div>\r\n            <div className=\"container h-4 bg-gray-200\"></div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default StoryView;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { REGISTER_USER } from \"../gql/mutation\";\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [registerUser, { data }] = useMutation(REGISTER_USER);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    registerUser({\r\n      variables: { username: username, email: email, password: password },\r\n    });\r\n  };\r\n\r\n  if (data?.createUser?.user) {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"md:w-full p-8 w-4/12 shadow-lg rounded-lg h-96 ml-auto mr-auto mt-32 flex flex-col justify-center items-center bg-gray-100\">\r\n      <p className=\"text-blue-500 font-bold text-3xl mb-4\">Register</p>\r\n      <form\r\n        className=\"container h-60 flex justify-around items-center flex-col \"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <input\r\n          className=\"w-80 h-11 outline-none border-2 rounded-lg border-blue-400 p-4\"\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          required\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          className=\"w-80 h-11 outline-none border-2 rounded-lg border-blue-400 p-4\"\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          required\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"w-80 h-11 outline-none border-2 rounded-lg border-blue-400 p-4\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {data?.createUser?.error && (\r\n          <p className=\"text-red-500 font-medium \">{data.createUser.error}</p>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-40 h-9 bg-blue-500 rounded-lg text-white font-semibold uppercase hover:bg-blue-600\"\r\n        >\r\n          submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { FOLLOW_USER } from \"../gql/mutation\";\r\nimport { useAuth } from \"../hooks/auth\";\r\nimport { useFollow } from \"../hooks/follow\";\r\nimport { isFollow } from \"../shared/user.state\";\r\n\r\nconst Follow = ({ id }) => {\r\n  const [followUser] = useMutation(FOLLOW_USER);\r\n  const [follow, setFollow] = useRecoilState(isFollow);\r\n  const user = useAuth();\r\n  const data = useFollow(id);\r\n  const onFollow = async () => {\r\n    await followUser({\r\n      variables: { id: id },\r\n    });\r\n    try {\r\n      setFollow(!follow);\r\n    } catch {}\r\n  };\r\n  return (\r\n    <button\r\n      onClick={onFollow}\r\n      className=\"w-36 md:32 md:h-8 h-9 bg-blue-500 rounded-md font-bold capitalize text-base hover:bg-blue-600 text-white\"\r\n    >\r\n      {data.followers.indexOf(user) >= 0 ? \"followed\" : \"follow\"}\r\n    </button>\r\n  );\r\n};\r\nexport default Follow;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { useEffect } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { GET_USER_BY_ID } from \"../gql/query\";\r\nimport { isFollow } from \"../shared/user.state\";\r\n\r\nexport const useFollow = (id) => {\r\n  const follow = useRecoilValue(isFollow);\r\n  const { data, refetch } = useQuery(GET_USER_BY_ID, {\r\n    variables: { id: id },\r\n  });\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [follow]);\r\n  return data?.getUserById;\r\n};\r\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useHistory } from \"react-router\";\r\nimport { isLogin } from \"../shared/user.state\";\r\nimport { LOGOUT } from \"../gql/mutation\";\r\n\r\nconst Logout = () => {\r\n  const [login, setLogin] = useRecoilState(isLogin);\r\n  const history = useHistory();\r\n  const [logout, { data }] = useMutation(LOGOUT);\r\n\r\n  const onLogout = async () => {\r\n    await logout();\r\n  };\r\n  if (data?.logout) {\r\n    !data.logout.user && setLogin(!login);\r\n    !data.logout.user && history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={onLogout}\r\n      className=\"w-36 md:32 md:h-8 h-9 bg-red-500 rounded-md font-bold capitalize text-base hover:bg-red-600 text-white\"\r\n    >\r\n      logout\r\n    </button>\r\n  );\r\n};\r\nexport default Logout;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { GET_USER_BY_ID } from \"../gql/query\";\r\nimport { useAuth } from \"../hooks/auth\";\r\nimport Follow from \"./Follow\";\r\nimport Logout from \"./Logout\";\r\n\r\nconst Profile = () => {\r\n  const user = useAuth();\r\n  const { id } = useParams();\r\n  const { data, refetch } = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    refetch();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {data && (\r\n        <div className=\"container p-8 md:p-2 \">\r\n          <div className=\"flex justify-around items-start mt-4 md:flex-col\">\r\n            <div className=\"w-1/3  p-4 shadow-md rounded-lg bg-gray-100 md:container md:mb-8\">\r\n              <p className=\"text-5xl capitalize font-extrabold pb-8 md:text-3xl\">\r\n                {user === id && \"Hello\"} {data.getUserById.username}\r\n              </p>\r\n              <span className=\"capitalize font-medium text-md text-gray-500 md:text-base \">\r\n                Have a nice Editing\r\n              </span>\r\n              <div className=\"mt-4 mb-4 md:text-base\">\r\n                <p className=\"text-blue-500 font-bold\">\r\n                  <span className=\"text-gray-700\">Email</span> :{\" \"}\r\n                  {data.getUserById.email}\r\n                </p>\r\n                <p className=\"font-semibold text-base\">\r\n                  <span className=\"text-blue-500 font-bold text-lg\">\r\n                    {data.getUserById.followers.length}\r\n                  </span>{\" \"}\r\n                  followers\r\n                </p>\r\n                <p className=\"font-semibold text-base\">\r\n                  <span className=\"text-blue-500 font-bold text-lg\">\r\n                    {data.getUserById.followings.length}\r\n                  </span>{\" \"}\r\n                  followings\r\n                </p>\r\n              </div>\r\n              {user ? user === id ? <Logout /> : <Follow id={id} /> : \"\"}\r\n            </div>\r\n            <div className=\"w-1/2 md:container\">\r\n              <p className=\"text-gray-800 font-bold text-2xl  capitalize mb-8 md:text-center\">\r\n                stories by {data.getUserById.username}\r\n              </p>\r\n              {data.getUserById.stories.map((s) => (\r\n                <Link key={s.id} to={`/story/${s.id}`}>\r\n                  <div className=\"w-full  mr-auto ml-auto mb-4 px-4 py-2 flex justify-between rounded-md bg-yellow-50 flex-col border-2 \">\r\n                    <p className=\"text-3xl font-extrabold font-sans mb-8 text-gray-800 cursor-pointer capitalize hover:text-yellow-800 md:text-xl\">\r\n                      {s.title}\r\n                    </p>\r\n                    <div>\r\n                      <p className=\"text-gray-600 text-sm font-semibold\">\r\n                        Published on :{\" \"}\r\n                        {new Date(Number(s.createdAt)).toDateString()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n//componenet import\nimport Header from \"./components/Header\";\nimport Feeds from \"./components/Feeds\";\nimport Editor from \"./components/Editor\";\nimport Login from \"./components/Login\";\nimport StoryView from \"./components/StoryView\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: \"/graphql\",\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <div className=\"App w-full h-full   \">\n      <ApolloProvider client={client}>\n        <Router>\n          <Header />\n\n          <Switch>\n            <Route path=\"/\" exact component={Feeds} />\n            <Route path=\"/editor\" component={Editor} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/story/:id\" component={StoryView} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/profile/:id\" component={Profile} />\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}